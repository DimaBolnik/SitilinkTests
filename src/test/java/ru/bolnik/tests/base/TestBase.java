package ru.bolnik.tests.base;

import com.codeborne.selenide.Configuration;
import com.codeborne.selenide.logevents.SelenideLogger;
import io.qameta.allure.selenide.AllureSelenide;
import org.aeonbits.owner.ConfigFactory;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import ru.bolnik.config.TestConfig;
import ru.bolnik.pages.*;

import static com.codeborne.selenide.Selenide.closeWebDriver;

public class TestBase {

    public static TestConfig config;

    protected HomePage homePage;
    protected ProductPage productPage;
    protected CartPage cartPage;
    protected LoginPage loginPage;
    protected CheckoutPage checkoutPage;
    protected FavoritesPage favoritesPage;

    @BeforeAll
    static void setupAll() {

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Owner
        config = ConfigFactory.create(TestConfig.class);

        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Selenide –±–µ—Ä—É—Ç—Å—è –∏–∑ Owner
        // –ó–Ω–∞—á–µ–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ (-D)
        Configuration.baseUrl = config.baseUrl();
        Configuration.browser = config.browser();
        Configuration.browserSize = config.browserSize();
        Configuration.pageLoadStrategy = config.pageLoadStrategy();

        // üì∏ –ü–æ–¥–∫–ª—é—á–∞–µ–º Allure-listener –¥–ª—è –ª–æ–≥–æ–≤ –∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
        SelenideLogger.addListener("AllureSelenide",
                new AllureSelenide()
                        .screenshots(true)       // –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç—ã
                        .savePageSource(true)    // —Å–æ—Ö—Ä–∞–Ω—è–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                        .includeSelenideSteps(true) // –¥–æ–±–∞–≤–ª—è–µ–º —à–∞–≥–∏ –≤ Allure
        );
    }

    @BeforeEach
    public void setUpPages() {
        homePage = new HomePage();
        productPage = new ProductPage();
        cartPage = new CartPage();
        loginPage = new LoginPage();
        checkoutPage = new CheckoutPage();
        favoritesPage = new FavoritesPage();
    }


    @AfterEach
    public void closeBrowser() {
        closeWebDriver();
    }
}
